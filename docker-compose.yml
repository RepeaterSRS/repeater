services:
  backend:
    build:
      context: backend
      target: development
    container_name: repeater-backend

    ports:
      - "8000:8000"

    volumes:
      - ./backend/src:/app/src
      - ./backend/tests:/app/tests
      - ./backend/scripts:/app/scripts
      - ./backend/alembic:/app/alembic

    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/repeater
      - SECRET_KEY=abc123
      - FRONTEND_URL=http://localhost:3000

    develop:
      watch:
        - action: sync
          path: backend
          target: /app
          ignore:
            - .venv/

        - action: rebuild
          path: ./uv.lock

    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: web
      target: development
    container_name: repeater-web

    ports:
      - "3000:3000"

    volumes:
      - ./web/src:/app/src
      - ./web/public:/app/public
      - ./docs:/app/docs

    develop:
      watch:
        - action: sync
          path: web
          target: /app
          ignore:
            - node_modules/
            - .next/

        - action: rebuild
          path: ./web/package.json

        - action: rebuild
          path: ./web/pnpm-lock.yaml

    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000

  db:
    image: postgres:17
    container_name: repeater-db

    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: repeater

    ports:
      - "5432:5432"

    volumes:
      - postgres_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d repeater"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
