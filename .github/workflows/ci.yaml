name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      db:
        image: postgres:17
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: repeater
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
      
      - name: Install dependencies
        run: uv sync
        working-directory: ./backend
      
      - name: Run backend formatting check
        run: |
          uvx ruff check --select I .
          uvx ruff format --check .
        working-directory: ./backend
      
      - name: Run tests
        run: uv run pytest
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/repeater
          SECRET_KEY: abc123
          FRONTEND_URL: .
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        working-directory: ./backend

  frontend-check:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: web/package.json

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./web

      - name: Copy OpenAPI spec
        run: |
          mkdir -p web/docs
          cp docs/openapi.yaml web/docs/openapi.yaml

      - name: Generate frontend client
        run: pnpm run openapi-ts
        working-directory: ./web

      - name: Run frontend formatting check
        run:
          pnpm exec prettier --find-config-path tsconfig.json
          pnpm exec prettier --show-config tsconfig.json
        working-directory: ./web
      
      - name: Run frontend formatting check
        run: |
          pnpm run lint
          pnpm exec prettier --check .
        working-directory: ./web
